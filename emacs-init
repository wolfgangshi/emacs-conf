(setq ns-right-option-modifier 'super)
(setq-default indent-tabs-mode nil)
(setq-default tab-width 4)
(setq load-path (cons  "/usr/local/lib/erlang/lib/tools-2.6.11/emacs"
		       load-path))
(setq erlang-root-dir "/usr/local/lib/erlang")
(setq exec-path (cons "/usr/local/lib/erlang/bin" exec-path))
(require 'erlang-start)

(setq load-path (cons  "~/.emacs.d/erlang-groovy-lua-modes"
		       load-path))
(require 'flymake)
(setq flymake-log-level 3)
(setq flymake-start-syntax-check-on-newline nil)
(setq flymake-no-changes-timeout 10)

(defun flymake-erlang-init ()
  (let* ((temp-file (flymake-init-create-temp-buffer-copy 'flymake-create-temp-inplace))
	 (local-file (file-relative-name temp-file (file-name-directory buffer-file-name))))
    (list "~/emacs/flymake_erlang" (list local-file))))
(add-to-list 'flymake-allowed-file-name-masks '("\\.erl\\'" flymake-erlang-init))

(defun my-erlang-mode-hook ()
  (flymake-mode 1))
(add-hook 'erlang-mode-hook 'my-erlang-mode-hook)

(add-to-list 'auto-mode-alist '("\\.es$" . erlang-mode))

(require 'coffee-mode)

(require 'nxml-mode)

(require 'two-mode-mode)

(or (assoc "\\.yaws$" auto-mode-alist)
    (setq auto-mode-alist (cons '("\\.yaws$" . two-mode-mode)
				auto-mode-alist)))

;; disable flymake when editing .yaws files
(defun my-two-mode-hook ()
  (flymake-mode 0))
(add-hook 'two-mode-hook 'my-two-mode-hook)

(autoload 'lua-mode "lua-mode" "Lua editing mode." t)
(add-to-list 'auto-mode-alist '("\\.lua$" . lua-mode))
(add-to-list 'interpreter-mode-alist '("lua" . lua-mode))

;;; turn on syntax highlighting
(global-font-lock-mode 1)

;;; use groovy-mode when file ends in .groovy or has #!/bin/groovy at start
(autoload 'groovy-mode "groovy-mode" "Major mode for editing Groovy code." t)
(add-to-list 'auto-mode-alist '("\.groovy$" . groovy-mode))
(add-to-list 'auto-mode-alist '("\.gradle$" . groovy-mode))
(add-to-list 'interpreter-mode-alist '("groovy" . groovy-mode))

;;; make Groovy mode electric by default.
(add-hook 'groovy-mode-hook
          '(lambda ()
             (require 'groovy-electric)
             (groovy-electric-mode)))

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(custom-enabled-themes (quote (deeper-blue)))
 '(eclim-eclipse-dirs (quote ("/Applications/Eclipse.app/Contents/Eclipse")))
 '(eclim-executable "/Applications/Eclipse.app/Contents/Eclipse/eclim")
 '(gradle-use-gradlew t)
 '(jdee-jdk-registry
   (quote
    (("1.8" . "/Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home"))))
 '(show-paren-mode t))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )

;;(add-to-list 'load-path  "~/.emacs.d/jdee")
;;(load "jdee")
;;(setq jdee-server-dir "~/.emacs.d/jdee-server")

;;(add-to-list 'load-path "~/.emacs.d")
;;(load "gradle-compile")

(add-to-list 'load-path "~/.emacs.d/emacs-eclim")
(require 'eclim)
(global-eclim-mode)

;;If you want to control eclimd from emacs, Uncomment
;;(require 'eclimd)




;; When the cursor is positioned on an error marker in a code buffer, emacs-eclim uses the local help feature in emacs
;; to display the corresponding error message in the echo area.
;; You can either invoke (display-local-help) manually or activate automatic display of
;; local help by adding the following to .emacs:
;;(setq help-at-pt-display-when-idle t)
;;(setq help-at-pt-timer-delay 0.1)
;;(help-at-pt-set-timer)

(add-to-list 'load-path "~/.emacs.d/auto-complete")
(require 'auto-complete-config)
(add-to-list 'ac-dictionary-directories "~/.emacs.d/ac-dict")
(ac-config-default)

;; add the emacs-eclim source
(require 'ac-emacs-eclim-source)
(ac-emacs-eclim-config)

(define-key ac-mode-map (kbd "M-TAB") 'auto-complete)


(add-to-list 'load-path "~/.emacs.d/gradle-mode")
(load "gradle-mode.el")
(add-hook 'java-mode-hook '(lambda() (gradle-mode 1)))

;; YASSnippet
(add-to-list 'load-path
              "~/.emacs.d/plugins/yasnippet")
(require 'yasnippet)
(yas-global-mode 1)
